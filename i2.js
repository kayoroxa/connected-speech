let myDict = [
  ['what do you', 'wha-r-yah'],
  ["i'm going to", 'ahmma'],
  ["i'm gonna", 'ahmma'],
  ['k who', '-ko'],
  ['this is the', 'thi-si-zd…ô'],
  ['this is', 'thi-siz'],
  ['you were to', 'you-…ôd…ô'],
  ['can', 'ken'],
  ['his', 'hiz'],
  ['\\bus\\b', 'as'],
  ['came', 'keim'],
  ['ne tod', 'n-r…ôd'],
  ['\\bout\\b', 'aut'],
  ['at h(is|er|im|iz)', 'e-r$1'],
  ['\\bat\\b', 'et'],
  ['me in', 'mi-en'],
  ['nd him', 'n-d√™m'],
  ['nd her', 'n-d√™r'],
  ['what it is', 'wha-ri-riz'],
  ['what (a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|…ô)', 'wha-r$1'],
  ['see', 'sii'],
  ["that i'm", 'tha-raimm'],
  ["isn't it", 'in-nit'],
  ['these', 'thiz'],
  ['because it', "b'kaz…ô"],
  ['out of', 'outta'],
  ['need to', 'nidd√¢', 'nidu'],
  ['which one of', 'wh…ô-tchu-on-n…ôv'],
  ['thinking about', 'thin-k…ô-r…ô-bau'],
  ['we always', 'we.ouss'],
  ['think you should', 'i thin-kyu-shuud'],
  ['ask this ', 'aSsis'],
  ['to his', 'tuuzzs'],
  ['is there', 'isde:'],
  ["they're", 'ther'],
  ['got to', 'gar…ô'],
  ['get to', 'ge.to'],
  ['something ', 's√£m-th√™n-g'],
  ['i will', 'auh'],
  ["i'll", 'auh'],
  ['t you', 'tchyah'],
  ['lot of s', 'loras'],
  ['a lot of', 'alora'],
  ['\\bwhat\\b', 'wha'],
  ["should've", 'shulrah'],
  ['should have', 'shulrah'],
  ["we'd have", 'we.rave'],
  ['we would have', 'we.rave'],
  ['could have', 'kurah'],
  ["could've", 'kurah'],
  ['want to get', 'wan-r…ô-get'],
  ['wants to', 'wan-st…ô'],
  ['want to', 'wanna'],
  ['to the', 'd√¢rah'],
  ['which is', 'wichis'],

  ['that he', 'tha-ri'],
  ["would've", 'wur…ô'],
  ['would have', 'wur…ô'],
  ['must have', 'must…ô'],
  ["must've", 'must…ô'],
  ["can't it", 'ke-nn√™'],
  ["can't even", 'ken-riven'],
  ['even', 'iven'],
  ['ought to', 'ough-r…ô'],
  ['do you', "d'y…ô"],
  ["it's the", "it's√¢h"],
  ['it is the', "it's√¢h"],
  ['let just', 'le-tjust'],
  ['and also', '…ô-nol-s√¥l'],
  ['and i also', '…ô-na-also'],
  ['does this have', 'd√¢z√™s.ave'],
  ['does that', 'zat'],
  ['nd that', 'n.nat'],
  ["'?t th", '-th'],
  ['does this', 'd√¢zes'],
  ['as him', 'asim'],
  ['asked (him|her|if)', 'esT.$1'],
  ['that i\\b', 'tha-rai'],
  ['Read h(im|er|is|iz)', 'ri-d$1'],
  ['(…πi|…πe|re|a)d him', '-d√™m'],
  ['(…πi|…πe|re|a)d him', '-d√™r'],
  ['m h(im|er|is|iz)', '-M$1'],
  ['(k)e? h(im|er|is|iz)', '-$1$2'],
  ['gonna', 'gon'],
  ['t do\\b', 'tch√∫'],
  ['\\bthrough the\\b', 'thruu-di'],
  ['\\bthrough\\b', 'thruu'],
  ['going to', 'gonna'],
  ['re it\\b', 'ri'],
  ['st of\\b', 's-t…ôv'],
  ['t of\\b', '-r…ôv'],
  ['when are you', 'whenriu'],
  ['because', "'cause"],
  ['with us', 'wi-TH√Çs'],
  ['being', 'bing'],
  ["and i'm", 'een√£m'],
  ['pe h(im|er)', '-p$1'],
  ['ing h(im|er)', 'ing$1'],
  ['\\bis\\b', 'iz'],
  // ['the ', 'd√¢h '],
  // ['you', 'yah'],
  ['\\bhere\\b', 'hi…ô'],
  ['what you', 'wha-tch-yah'],
  ['ing my', '-im…ô'],
  ['thought of', 'th√≥rov'],
  ['about it', 'abou-r√™t'],
  ['saw it', 's√≥√™t'],
  ['But I', 'b√¢√¢rai'],
  ['nt(a|e|i|o|u|√°|√©|√≠|√≥|√∫|…ô)', 'n$1'],
  ['p (a|e|i|o|u|√°|√©|√≠|√≥|√∫|…ô)', '-p$1'],
  ['how (do|to)', 'haw-r…ô'],
  ["what's", 'watts'],
  ['with the', 'ui-thee'],
  ["it's a", 'tsuh'],
  ['i am', 'aiem'],
  ["i'm", 'amm'],
  ['et (a|e|i|o|u|√°|√©|√≠|√≥|√∫|…ô)', 'e-r$1'],
  ['what do you', 'whatcha'],
  ['what have you', 'whatcha'],
  ['what are you', 'whatcha'],
  ['some more', 's-more'],
  ['used to', 'us-ta'],
  ['each of you', 'etch√¢viu'],
  ['did you', 'dj…ôh'],
  ['when he', 'whe-ni'],
  ['d your', '-dyour'],
  ['your', 'y…ôr'],
  ["you're", 'y…ôr'],
  ['t you', '-tchiu'],
  ['you', 'y…ô'],
  ['\\bi\\b', 'ai'],
  ['\\bThe a', 'Thi-a'],
  ['\\bface\\b', 'feiss'],
  ['(w)me? (a|e|i|o|u|√°|√©|√≠|√≥|√∫|…ô)', '$1-M$2'],
  ['ve i', 'vi', false],

  ['ve h(er|him)', '-v$1'],
  ['s of y', 's…ôy'],
  ['of what', 'o-vuat'],
  ['of\\b', '…ôv'],
  ['as well as', 'as we-llas'],
  ['if all goes well', 'i-fal goe-suell'],
  ['in our', 'i-nour'],
  ['trying to', 'trua-inda'],
  ['taking to', 'tei-kinda'],
  ['to get', 'r√¢-get'],
  ['get to', 'ge-t√¢'],
  ['it has', 'idas'],
  ['s have', '.s√™v'],
  ['s ha', 'sa'],
  ['to that', 'r√¢ that'],
  ['can i', 'canai'],
  ['i want you to', 'iuan-tch√™-r√™'],
  ["think i'm", 'thin-kM'],
  ['heard anything', 'heardything'],
  ["there's a", 'deza'],
  ['cause', 'k√™z'],
  ['z th', 'z'],
  ["'s", "'z"],
  ['de (of\\b)', '-dd…ô'],
  ['de o', '-ddo'],
  ['With an accident', 'withanAccident'],
  ['why would they', 'ua rdey'],
  ['how would i', 'rauu-rai'],
  ['would he', 'u√¢ri'],
  ['would', 'w…ôd'],
  ['would (a|e|i|o|u|√°|√©|√≠|√≥|√∫|…ô)', `u-r$1`],
  ['would (a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|…ô)', 'u-d$1'],
  ["and I'd always", 'anai-rolways'],
  ["and it'll", "anir'll"],
  ['and this', 'anis'],
  ['and w', 'anw'],
  ['t to\\b', '-r√¢h'],
  ['t do\\b', 'tch√¢h'],
  ["why he's so", 'whaiSS so'],
  ['an example', 'a-nexample'],
  ["and that's", 'a-nets'],
  ['on that', 'onet'],
  ['getting that', 'geinat'],
  ['saying that', 'sayinat'],

  ['try to', 'tryr√¢'],
  ['there is', 'theris'],
  ['watching a', 'watchina'],
  ['wish i', 'wishai'],
  ['with all', 'wi-th√≥l'],
  ['did i ever tell you', 'di-rai ever tellyou'],
  ["How'd you", 'how-dju'],

  ['about anything', 'abou-ranything'],
  ["l'm actually", 'i-machually'],
  ['go together', 'go-rogether'],
  // ['if he', 'ife'],
  ['build her', 'builder'],
  ['Maybe he', 'maybe i '],
  ["don't", 'ron'],
  ['died in there', 'dairiner'],
  ['them all', 'themou'],
  ['something in the', 'sometinina'],
  ['that in', 'tharin'],
  ['\\bwas\\b', 'waz'],
  ['\\ball\\b', '√≥ll'],
  ['\\bour\\b', 'a…π'],
  ['that is', 'thadis'],
  ['for the', 'f√¥th√™'],
  ["didn't", 'rin'],
  ["doesn't", 'doesn'],
  // ['n you', 'nyou'],
  ['with this', 'withis'],
  ['should we', 'shou-we'],
  ['and i', 'e-nai'],
  ["'ve", 'V'],

  ['\\bask th(em|ese|at)', 'es-t$1'],
  ['d them', '-dem'],
  ['ss them', '-ss…ôm'],
  // ['ing\\b', 'in'],
  ['(v|p|t|k)ed\\b (a|e|i|o|u|…ô)', '-$1-t$2'],
  ['ned\\b (a|e|i|o|u|…ô)', '-n-d$1'],
  ['(k|p|f|g)ed the', '-$1t-thi'],
  ['(?<!r)(v|p|t|k|n)ed\\b', '-$1t'],
  ['t h', "-t'h"],
  ['ve th', '-Vth'],
  ['m to\\b', '-m:r…ô'],
  ['n these', '-niz'],
  ['n the\\b', '-nnah'],
  ['have to', 'ha-fta'],
  ['t are you', 'tcha'],
  ['cause s', 'causs'],
  ['out in', 'a¬∑¬∑in'],
  [' will', "'ll"],
  ['re? (a|e|i|o|u|√°|√©|√≠|√≥|√∫|…ô)', 'r-…π$1'],
  ['r h', '-rr'],
  ['ble', 'bl'],
  ['t h', '.dd'],
  ['s w', '.s(u)w'],
  ['o w', '-oW'],
  ['y i', '-yi'],
  ['t p', 'p'], //get pregnant
  // ['where are you', 'whereya'],
  ['nt o', '-no'],
  ['v the', '-Vthe'],

  ['d l', 'dl'],
  ['t as', '-tt√°s'],
  // ['t a', 'tt√™'],
  ['ot a', 'o-ra'],

  ['n th(?!r)', 'n'],
  ['ne th(?!r)', 'n-th'],
  ['d to', '-d√¢h'],

  ['t (s)', '-t$1'],
  ['t i\\b', 'ddai'],
  ['t i\\b', 'ddi'],
  ['d i\\b', 'rai'],
  ['n one', 'nuone'],
  ['l?l (a|e|i|o|u|√°|√©|√≠|√≥|√∫|…ô)', '-l$1'],
  // ['d ', ''],

  // ['t ', ''],

  // ["(n|v|p|g|s|m|k|(?<!f)f|th|r|l) (h(?!as)|')?(a|e|i|o|w|u|y)", '-$1$3'],
  ['(y|i) s', '.$1s'],
  ['\\bthem\\b', "'em"],
  ['\\bhim\\b', 'im'],
  ['\\bhis\\b', 'is'],
  ['\\bher\\b', 'er'],
  ['d a', '-da'],

  ['have a', 'ha-va'],
  ['ch o', "ch'o"],
  ['ne o', 'no'],
  ['t l ', 'tl'],
  ['ate a', 'eira'],
  ['v it', '-vit'],
  ['te a', 'ra'],
  ['e a', 'eya.'],
  ['m i', 'mi'],
  ['ee', 'i'],
  ['gs to\\b', 'g-stch…ô'],
  ['(!?gs) to\\b', ' r√¢'],
  ['he i', 'hei'],
  ['re o', 'ro'],
  ['ing the', 'in…ô'],
  ["isn't the", 'izn-thii'],

  ['and', 'an'],
  ['ide (you|y…ô)', 'i-dju'],
  ['(?<=\\w)(m|k|r|f)e\\b', '$1'],
  ['m (a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|w|…ô)', '-m$1'],
  ['z (a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|…ô)', '-z$1'],
  ['ce (a|i|o|u|√°|√≠|√≥|√∫|y|…ô)', '-√ß$1'],
  ['n (a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|…ô)', '-n$1'],
  ['(?<!s)s (a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|…ô)', '-z$1'],
  ['ss (a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|…ô)', 's-s$1'],
  ['(?<=a|e|i|o|u|r|…ô)(t|d)+e?\\s?(a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|…ô)(?!a|k|y)', '-r$2'],
  ['t (a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|…ô)', '-t$1'],
  ['(v|u|w) (a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|…ô)', '-$1$2'],

  ['(k|p|f|g|bly|ch) (a|e|i|o|u|√°|√©|√≠|√≥|√∫|y|ea|w|…ô)', '-$1$2'],
  ['n m', '.m'],
  ['if we', 'ife', false],
  ['go to', 'go-r…ô'],
  ['on r√¢', 'on to'],
  ['(?<!h)e e', 'e'],
  ['s s', '-s'],
  ['s th', '-z'],
  ['t t', '.t'],

  ['(s|z) r', '-$1ur'],
  // ['(e|a)r\\b', '$1…π'], // terminando com …π
  ['mw', 'mu'],
  ['b-', '-b-'],
  ['i i', 'i'],
  ['r r', '-r'],
  ['d d', '-d'],
  ['(r|…π) th', '…π-th'],
  ['fwith', 'fwth'],
  ['th d', '-d'],
  ['s h', '-s-h'],
  ['zar', 'z…ô…π'],
  // ['ve\\b', 'v'],
]

// dict.slice(90, 100).forEach(v => {
//   console.log(v[0], 'üëâ', v[1])
// })

function generateConnected(frase) {
  const steps = []
  const sentenceConnected = myDict.reduce((acc, curr) => {
    const replaced = curr
      ? acc.replace(new RegExp(curr[0], 'gi'), curr[1].replace(/\./g, '-'))
      : acc
    // if (acc !== replaced) console.log('       R:', curr.join(' = '))
    if (acc !== replaced) {
      steps.push(replaced.replace('\n', ''))
      // console.log(replaced.replace('\n', ''))
    }
    return replaced
  }, frase)

  return {
    sentenceConnected,
    steps,
  }
}
const fs = require('fs')

const txt = fs.readFileSync('./890k sentences in english.txt', {
  encoding: 'utf-8',
})
const sentences = txt.split('\r\n')
const allCTS = sentences.map((s, i) => {
  console.log(`${i + 1}/${sentences.length}`)
  console.clear()
  return [generateConnected(s).sentenceConnected, s]
})
const allCTSSortted = allCTS.sort(
  (a, b) => b[0].match(/-/g)?.length - a[0].match(/-/g)?.length
)

fs.writeFileSync(
  './export.txt',
  allCTSSortted.map(v => v.join('\n').replace(/Ôªø/g, '')).join('\n\n')
)

console.log(allCTSSortted)
